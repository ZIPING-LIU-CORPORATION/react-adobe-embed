"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");const t={demoUrl:"https://documentcloud.adobe.com/view-sdk-demo/PDFs/Bodea Brochure.pdf",staticDefaultConfig:{showAnnotationTools:!1,showLeftHandPanel:!1,showPageControls:!1,showDownloadPDF:!1,showPrintPDF:!1},staticDivId:"pdf-div",demoMetaData:{fileName:"Menu.pdf",id:"6d07d124 - ac85–43b3 - a867–36930f502ac6"}};function i({divId:e,viewerConfig:i,url:o,clientID:d,_fileMeta:a,_dcView:n}){return(n||new window.AdobeDC.View({clientId:d,divId:e})).previewFile({content:{location:{url:o}},metaData:a||t.demoMetaData},i)}const o=i=>{const o=e.useRef(document.getElementById(i.id||t.staticDivId));return e.createElement("div",{ref:o,id:i.id||t.staticDivId,className:i.className||"adobe-viewer-of-amazon-corporate-retaliations",style:i.style,title:i.title||"entity-existent-on-frameworks-of-state-regulations-as-defined-by-the-state-and-may-try-to-destroy-your-life-and-control-the-fbi-of-the-state-such-as-amazon-legal-idiots"})};exports.default=function(d){const[a,n]=e.useState(!1),[s,r]=e.useState(!1),[c,l]=e.useState(!1),f=(0,e[d?.useReactHookForAdobeAPIConfigs||"useMemo"])((()=>{if(!0===a){const e=window.AdobeDC?.View;return e}}),[a]);return(0,e[d?.useReactHookWhenLoadingAdobeAPI||"useEffect"])((()=>{if(!1===c){if(document.querySelector(".react-adobe-embed-handholding-adobe-api-loading-idiocy"))r(!0);else{const e=document.createElement("script");e.setAttribute("data-adobe-pdf-id",d.id||t.staticDivId),e.setAttribute("class","react-adobe-embed-handholding-adobe-api-loading-idiocy"),e.src="https://acrobatservices.adobe.com/view-sdk/viewer.js",e.async=!0,e.onload=()=>{l(!0)},document.body.appendChild(e)}}}),[d.id,c,a]),(0,e[d?.useReactHookWhenCallingAdobeAPI||"useEffect"])((()=>{!1===a&&!0===c&&document.addEventListener("adobe_dc_view_sdk.ready",(()=>{n(!0)})),!0===c&&!0===a&&(e=>{e.debug&&console.info("Adobe PDF Viewer SDK Ready Event",f,window.adobe_dc_view_sdk);const o=e.id||t.staticDivId;document.getElementById(o)&&"LIGHT_BOX"!==e.previewConfig?.embedMode?(e.debug&&console.info("Adobe PDF Viewer SDK Ready Rendering"),i({divId:o,viewerConfig:e.previewConfig||t.staticDefaultConfig,url:e.url||t.demoUrl,clientID:e.clientId,_fileMeta:e.fileMeta})):"LIGHT_BOX"===e.previewConfig?.embedMode&&e?.triggerAdobeDCViewRender&&i({divId:e.id||t.staticDivId,viewerConfig:e.previewConfig||t.staticDefaultConfig,url:e.url||t.demoUrl,clientID:e.clientId})})(d)}),[a,c,d,f]),e.useEffect((()=>{if(!0===s){const e=d.id||t.staticDivId;document.getElementById(e)&&i({divId:e,viewerConfig:d.previewConfig||t.staticDefaultConfig,url:d.url||t.demoUrl,clientID:d.clientId,_fileMeta:d.fileMeta}),r(!1)}}),[s,d]),e.createElement(o,{...d})},exports.previewFile=i;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmNqcy5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5jb25zdCBEZWZhdWx0Q29uZmlncyA9IHtcbiAgICBkZW1vVXJsOiBcImh0dHBzOi8vZG9jdW1lbnRjbG91ZC5hZG9iZS5jb20vdmlldy1zZGstZGVtby9QREZzL0JvZGVhIEJyb2NodXJlLnBkZlwiLFxuICAgIHN0YXRpY0RlZmF1bHRDb25maWc6IHtcbiAgICAgICAgc2hvd0Fubm90YXRpb25Ub29sczogZmFsc2UsXG4gICAgICAgIHNob3dMZWZ0SGFuZFBhbmVsOiBmYWxzZSxcbiAgICAgICAgc2hvd1BhZ2VDb250cm9sczogZmFsc2UsXG4gICAgICAgIHNob3dEb3dubG9hZFBERjogZmFsc2UsXG4gICAgICAgIHNob3dQcmludFBERjogZmFsc2UsXG4gICAgfSxcbiAgICBzdGF0aWNEaXZJZDogXCJwZGYtZGl2XCIsXG4gICAgZGVtb01ldGFEYXRhOiB7XG4gICAgICAgIGZpbGVOYW1lOiBcIk1lbnUucGRmXCIsXG4gICAgICAgIGlkOiBcIjZkMDdkMTI0IC0gYWM4NeKAkzQzYjMgLSBhODY34oCTMzY5MzBmNTAyYWM2XCIsXG4gICAgfSxcbn07XG5leHBvcnQgZnVuY3Rpb24gcHJldmlld0ZpbGUoeyBkaXZJZCwgdmlld2VyQ29uZmlnLCB1cmwsIGNsaWVudElELCBfZmlsZU1ldGEsIF9kY1ZpZXcsIH0pIHtcbiAgICBjb25zdCBjb25maWcgPSB7XG4gICAgICAgIGNsaWVudElkOiBjbGllbnRJRCxcbiAgICAgICAgZGl2SWQsXG4gICAgfTtcbiAgICBjb25zdCBkY1ZpZXcgPSBfZGNWaWV3IHx8IG5ldyB3aW5kb3cuQWRvYmVEQy5WaWV3KGNvbmZpZyk7XG4gICAge1xuICAgIH1cbiAgICBjb25zdCBwcmV2aWV3RmlsZVByb21pc2UgPSBkY1ZpZXcucHJldmlld0ZpbGUoe1xuICAgICAgICBjb250ZW50OiB7XG4gICAgICAgICAgICBsb2NhdGlvbjoge1xuICAgICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgbWV0YURhdGE6IF9maWxlTWV0YSB8fCBEZWZhdWx0Q29uZmlncy5kZW1vTWV0YURhdGEsXG4gICAgfSwgdmlld2VyQ29uZmlnKTtcbiAgICByZXR1cm4gcHJldmlld0ZpbGVQcm9taXNlO1xufVxuY29uc3QgQWRvYmVEaXYgPSAocHJvcHMpID0+IHtcbiAgICBjb25zdCByZWYgPSBSZWFjdC51c2VSZWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJvcHMuaWQgfHwgRGVmYXVsdENvbmZpZ3Muc3RhdGljRGl2SWQpKTtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyByZWY6IHJlZiwgaWQ6IHByb3BzLmlkIHx8IERlZmF1bHRDb25maWdzLnN0YXRpY0RpdklkLCBjbGFzc05hbWU6IHByb3BzLmNsYXNzTmFtZSB8fCBcImFkb2JlLXZpZXdlci1vZi1hbWF6b24tY29ycG9yYXRlLXJldGFsaWF0aW9uc1wiLCBzdHlsZTogcHJvcHMuc3R5bGUsIHRpdGxlOiBwcm9wcy50aXRsZSB8fFxuICAgICAgICAgICAgXCJlbnRpdHktZXhpc3RlbnQtb24tZnJhbWV3b3Jrcy1vZi1zdGF0ZS1yZWd1bGF0aW9ucy1hcy1kZWZpbmVkLWJ5LXRoZS1zdGF0ZS1hbmQtbWF5LXRyeS10by1kZXN0cm95LXlvdXItbGlmZS1hbmQtY29udHJvbC10aGUtZmJpLW9mLXRoZS1zdGF0ZS1zdWNoLWFzLWFtYXpvbi1sZWdhbC1pZGlvdHNcIiB9KSk7XG59O1xuLyoqXG4gKiBAZGVzY3JpcHRpb24gLSBSZWFjdFZpZXdBZG9iZSBjb21wb25lbnQgd2hpY2ggaXMgYSB3cmFwcGVyIGFyb3VuZCBBZG9iZSBQREYgVmlld2VyIFNESyB0aGF0IGFsbG93cyBmb3JcbiAqIHJlbmRlcmluZyBQREZzIHZpYSBBZG9iZSdzIFBERiBFbmdpbmUuIEVuc3VyZXMgdGhhdCBBZG9iZSBFbWJlZCBBUEkgU2VydmljZXMgYXJlXG4gKiBjb21wYXJ0bWVudGFsaXplZCBhbmQgZnVsbHkgZW5jYXBzdWxhdGVkIGFuZCBjb25maWd1cmVkIHdpdGhpbiBhIHJlbmRlcmVkIHBhZ2UuIE5vdCBzdXJlIHdoeSBBZG9iZVxuICogRW1iZWQgQVBJIGRvZXMgbm90IGluaGVyZW50bHkgZG8gdGhpcy4gU2VlIFJlYWN0Vmlld0Fkb2JlUHJvcHMgZm9yIG1vcmUgZGV0YWlscy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmVhY3RWaWV3QWRvYmUocHJvcHMpIHtcbiAgICBjb25zdCBbYWRvYmVQREZQcm9ncmFtbWVJbnN0YWxsZWQsIHNldEFkb2JlUERGUHJvZ3JhbW1lSW5zdGFsbGVkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBbY29tcG9uZW50TmVlZHNSZW5kZXJpbmcsIHNldENvbXBvbmVudE5lZWRzUmVuZGVyaW5nXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBbc2NyaXB0Vmlld2VyTG9hZGVkLCBzZXRTY3JpcHRWaWV3ZXJMb2FkZWRdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IHVzZUhvb2tzRm9yQ29uZmlnID0gUmVhY3RbcHJvcHM/LnVzZVJlYWN0SG9va0ZvckFkb2JlQVBJQ29uZmlncyB8fCBcInVzZU1lbW9cIl07XG4gICAgY29uc3QgYWRvYmVEQ1ZpZXcgPSB1c2VIb29rc0ZvckNvbmZpZygoKSA9PiB7XG4gICAgICAgIGlmIChhZG9iZVBERlByb2dyYW1tZUluc3RhbGxlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc3QgYWRvYmVkY3ZpZXcgPSB3aW5kb3dbXCJBZG9iZURDXCJdPy5bXCJWaWV3XCJdO1xuICAgICAgICAgICAgcmV0dXJuIGFkb2JlZGN2aWV3O1xuICAgICAgICB9XG4gICAgfSwgW2Fkb2JlUERGUHJvZ3JhbW1lSW5zdGFsbGVkXSk7XG4gICAgY29uc3QgdXNlSG9va3NGb3JMb2FkaW5nID0gUmVhY3RbcHJvcHM/LnVzZVJlYWN0SG9va1doZW5Mb2FkaW5nQWRvYmVBUEkgfHwgXCJ1c2VFZmZlY3RcIl07XG4gICAgKHVzZUhvb2tzRm9yTG9hZGluZykoKCkgPT4ge1xuICAgICAgICBpZiAoc2NyaXB0Vmlld2VyTG9hZGVkID09PSBmYWxzZSkge1xuICAgICAgICAgICAgY29uc3Qgc2NyaXB0RXhpc3RzQUxyZWFkeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVhY3QtYWRvYmUtZW1iZWQtaGFuZGhvbGRpbmctYWRvYmUtYXBpLWxvYWRpbmctaWRpb2N5XCIpO1xuICAgICAgICAgICAgaWYgKHNjcmlwdEV4aXN0c0FMcmVhZHkpIHtcbiAgICAgICAgICAgICAgICBzZXRDb21wb25lbnROZWVkc1JlbmRlcmluZyh0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtYWRvYmUtcGRmLWlkXCIsIHByb3BzLmlkIHx8IERlZmF1bHRDb25maWdzLnN0YXRpY0RpdklkKTtcbiAgICAgICAgICAgICAgICBzY3JpcHQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJyZWFjdC1hZG9iZS1lbWJlZC1oYW5kaG9sZGluZy1hZG9iZS1hcGktbG9hZGluZy1pZGlvY3lcIik7XG4gICAgICAgICAgICAgICAgc2NyaXB0LnNyYyA9IFwiaHR0cHM6Ly9hY3JvYmF0c2VydmljZXMuYWRvYmUuY29tL3ZpZXctc2RrL3ZpZXdlci5qc1wiO1xuICAgICAgICAgICAgICAgIHNjcmlwdC5hc3luYyA9IHRydWU7XG4gICAgICAgICAgICAgICAgc2NyaXB0Lm9ubG9hZCA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0U2NyaXB0Vmlld2VyTG9hZGVkKHRydWUpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwgW3Byb3BzLmlkLCBzY3JpcHRWaWV3ZXJMb2FkZWQsIGFkb2JlUERGUHJvZ3JhbW1lSW5zdGFsbGVkXSk7XG4gICAgY29uc3QgdXNlSG9va3NGb3JDYWxsID0gUmVhY3RbcHJvcHM/LnVzZVJlYWN0SG9va1doZW5DYWxsaW5nQWRvYmVBUEkgfHwgXCJ1c2VFZmZlY3RcIl07XG4gICAgdXNlSG9va3NGb3JDYWxsKCgpID0+IHtcbiAgICAgICAgaWYgKGFkb2JlUERGUHJvZ3JhbW1lSW5zdGFsbGVkID09PSBmYWxzZSAmJiBzY3JpcHRWaWV3ZXJMb2FkZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJhZG9iZV9kY192aWV3X3Nkay5yZWFkeVwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgc2V0QWRvYmVQREZQcm9ncmFtbWVJbnN0YWxsZWQodHJ1ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjYWxsQWRvYmVBcGkgPSAocHJvcHMpID0+IHtcbiAgICAgICAgICAgIGlmIChwcm9wcy5kZWJ1ZylcbiAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oXCJBZG9iZSBQREYgVmlld2VyIFNESyBSZWFkeSBFdmVudFwiLCBhZG9iZURDVmlldywgd2luZG93W1wiYWRvYmVfZGNfdmlld19zZGtcIl0pO1xuICAgICAgICAgICAgY29uc3QgZGl2SWQgPSBwcm9wcy5pZCB8fCBEZWZhdWx0Q29uZmlncy5zdGF0aWNEaXZJZDtcbiAgICAgICAgICAgIGNvbnN0IGRpdkVsbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRpdklkKTtcbiAgICAgICAgICAgIGlmIChkaXZFbG0gJiYgcHJvcHMucHJldmlld0NvbmZpZz8uZW1iZWRNb2RlICE9PSBcIkxJR0hUX0JPWFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzLmRlYnVnKVxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oXCJBZG9iZSBQREYgVmlld2VyIFNESyBSZWFkeSBSZW5kZXJpbmdcIik7XG4gICAgICAgICAgICAgICAgcHJldmlld0ZpbGUoe1xuICAgICAgICAgICAgICAgICAgICBkaXZJZCxcbiAgICAgICAgICAgICAgICAgICAgdmlld2VyQ29uZmlnOiBwcm9wcy5wcmV2aWV3Q29uZmlnIHx8IERlZmF1bHRDb25maWdzLnN0YXRpY0RlZmF1bHRDb25maWcsXG4gICAgICAgICAgICAgICAgICAgIHVybDogcHJvcHMudXJsIHx8IERlZmF1bHRDb25maWdzLmRlbW9VcmwsXG4gICAgICAgICAgICAgICAgICAgIGNsaWVudElEOiBwcm9wcy5jbGllbnRJZCxcbiAgICAgICAgICAgICAgICAgICAgX2ZpbGVNZXRhOiBwcm9wcy5maWxlTWV0YSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHByb3BzLnByZXZpZXdDb25maWc/LmVtYmVkTW9kZSA9PT0gXCJMSUdIVF9CT1hcIikge1xuICAgICAgICAgICAgICAgIGlmIChwcm9wcz8udHJpZ2dlckFkb2JlRENWaWV3UmVuZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXdGaWxlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpdklkOiBwcm9wcy5pZCB8fCBEZWZhdWx0Q29uZmlncy5zdGF0aWNEaXZJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdlckNvbmZpZzogcHJvcHMucHJldmlld0NvbmZpZyB8fCBEZWZhdWx0Q29uZmlncy5zdGF0aWNEZWZhdWx0Q29uZmlnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBwcm9wcy51cmwgfHwgRGVmYXVsdENvbmZpZ3MuZGVtb1VybCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWVudElEOiBwcm9wcy5jbGllbnRJZCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBpZiAoc2NyaXB0Vmlld2VyTG9hZGVkID09PSB0cnVlICYmIGFkb2JlUERGUHJvZ3JhbW1lSW5zdGFsbGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjYWxsQWRvYmVBcGkocHJvcHMpO1xuICAgICAgICB9XG4gICAgfSwgW2Fkb2JlUERGUHJvZ3JhbW1lSW5zdGFsbGVkLCBzY3JpcHRWaWV3ZXJMb2FkZWQsIHByb3BzLCBhZG9iZURDVmlld10pO1xuICAgIC8vTGlzdGVuIGlmIGNvbXBvbmVudCBuZWVkcyByZXJlbmRlcmluZyBkdWUgdG8gcGFnZSB2aWV3IGNoYW5nZVxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChjb21wb25lbnROZWVkc1JlbmRlcmluZyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc3QgZGl2SWQgPSBwcm9wcy5pZCB8fCBEZWZhdWx0Q29uZmlncy5zdGF0aWNEaXZJZDtcbiAgICAgICAgICAgIGNvbnN0IGRpdkVsbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRpdklkKTtcbiAgICAgICAgICAgIGlmIChkaXZFbG0pIHtcbiAgICAgICAgICAgICAgICBwcmV2aWV3RmlsZSh7XG4gICAgICAgICAgICAgICAgICAgIGRpdklkLFxuICAgICAgICAgICAgICAgICAgICB2aWV3ZXJDb25maWc6IHByb3BzLnByZXZpZXdDb25maWcgfHwgRGVmYXVsdENvbmZpZ3Muc3RhdGljRGVmYXVsdENvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBwcm9wcy51cmwgfHwgRGVmYXVsdENvbmZpZ3MuZGVtb1VybCxcbiAgICAgICAgICAgICAgICAgICAgY2xpZW50SUQ6IHByb3BzLmNsaWVudElkLFxuICAgICAgICAgICAgICAgICAgICBfZmlsZU1ldGE6IHByb3BzLmZpbGVNZXRhLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0Q29tcG9uZW50TmVlZHNSZW5kZXJpbmcoZmFsc2UpO1xuICAgICAgICB9XG4gICAgfSwgW2NvbXBvbmVudE5lZWRzUmVuZGVyaW5nLCBwcm9wc10pO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEFkb2JlRGl2LCB7IC4uLnByb3BzIH0pO1xufVxuO1xuIl0sIm5hbWVzIjpbIkRlZmF1bHRDb25maWdzIiwiZGVtb1VybCIsInN0YXRpY0RlZmF1bHRDb25maWciLCJzaG93QW5ub3RhdGlvblRvb2xzIiwic2hvd0xlZnRIYW5kUGFuZWwiLCJzaG93UGFnZUNvbnRyb2xzIiwic2hvd0Rvd25sb2FkUERGIiwic2hvd1ByaW50UERGIiwic3RhdGljRGl2SWQiLCJkZW1vTWV0YURhdGEiLCJmaWxlTmFtZSIsImlkIiwicHJldmlld0ZpbGUiLCJkaXZJZCIsInZpZXdlckNvbmZpZyIsInVybCIsImNsaWVudElEIiwiX2ZpbGVNZXRhIiwiX2RjVmlldyIsIkFkb2JlREMiLCJWaWV3IiwiY2xpZW50SWQiLCJjb250ZW50IiwibG9jYXRpb24iLCJtZXRhRGF0YSIsInByb3BzIiwiUmVhY3QiLCJ1c2VSZWYiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY3JlYXRlRWxlbWVudCIsInJlZiIsImNsYXNzTmFtZSIsInN0eWxlIiwidGl0bGUiLCJhZG9iZVBERlByb2dyYW1tZUluc3RhbGxlZCIsInNldEFkb2JlUERGUHJvZ3JhbW1lSW5zdGFsbGVkIiwidXNlU3RhdGUiLCJjb21wb25lbnROZWVkc1JlbmRlcmluZyIsInNldENvbXBvbmVudE5lZWRzUmVuZGVyaW5nIiwic2NyaXB0Vmlld2VyTG9hZGVkIiwic2V0U2NyaXB0Vmlld2VyTG9hZGVkIiwiYWRvYmVEQ1ZpZXciLCJ1c2VIb29rc0ZvckNvbmZpZyIsInVzZVJlYWN0SG9va0ZvckFkb2JlQVBJQ29uZmlncyIsImEiLCJ3aW5kb3ciLCJ1c2VIb29rc0ZvckxvYWRpbmciLCJ1c2VSZWFjdEhvb2tXaGVuTG9hZGluZ0Fkb2JlQVBJIiwicXVlcnlTZWxlY3RvciIsInNjcmlwdCIsInNldEF0dHJpYnV0ZSIsInNyYyIsImFzeW5jIiwib25sb2FkIiwiYm9keSIsImFwcGVuZENoaWxkIiwidXNlSG9va3NGb3JDYWxsIiwidXNlUmVhY3RIb29rV2hlbkNhbGxpbmdBZG9iZUFQSSIsImFkZEV2ZW50TGlzdGVuZXIiLCJkZWJ1ZyIsImNvbnNvbGUiLCJpbmZvIiwiYWRvYmVfZGNfdmlld19zZGsiLCJiIiwicHJldmlld0NvbmZpZyIsImVtYmVkTW9kZSIsImZpbGVNZXRhIiwidHJpZ2dlckFkb2JlRENWaWV3UmVuZGVyIiwidXNlRWZmZWN0IiwiQWRvYmVEaXYiXSwibWFwcGluZ3MiOiIyRkFDQSxNQUFvQkEsRUFBRyxDQUNuQkMsUUFBUyx3RUFDVEMsb0JBQXFCLENBQ2pCQyx1QkFDQUMscUJBQ0FDLG9CQUNBQyxpQkFBc0IsRUFDdEJDLGNBQ0gsR0FDREMsWUFBYSxVQUNiQyxhQUFjLENBQ1ZDLFNBQVUsV0FDVkMsR0FBSSw2Q0FHTCxTQUFvQkMsR0FBR0MsTUFBQUEsRUFBT0MsYUFBQUEsRUFBY0MsSUFBQUEsRUFBS0MsU0FBQUEsRUFBVUMsVUFBQUEsRUFBV0MsUUFBQUEsSUFnQnpFLE9BWGVBLEdBQVcsV0FBV0MsUUFBUUMsS0FKOUIsQ0FDWEMsU0FBVUwsRUFDVkgsTUFBQUEsS0FLOEJELFlBQVksQ0FDMUNVLFFBQVMsQ0FDTEMsU0FBVSxDQUNOUixJQUFLQSxJQUdiUyxTQUFVUCxHQUFhakIsRUFBZVMsY0FDdkNLLEVBRVAsQ0FDQSxRQUFrQlcsSUFDZCxRQUFZQyxFQUFNQyxPQUFPQyxTQUFTQyxlQUFlSixFQUFNZCxJQUFNWCxFQUFlUSxjQUM1RSxTQUFjc0IsY0FBYyxNQUFPLENBQUVDLElBQUtBLEVBQUtwQixHQUFJYyxFQUFNZCxJQUFNWCxFQUFlUSxZ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
