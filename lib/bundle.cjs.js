"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");const t={demoUrl:"https://documentcloud.adobe.com/view-sdk-demo/PDFs/Bodea Brochure.pdf",staticDefaultConfig:{showAnnotationTools:!1,showLeftHandPanel:!1,showPageControls:!1,showDownloadPDF:!1,showPrintPDF:!1},staticDivId:"pdf-div",demoMetaData:{fileName:"Menu.pdf",id:"6d07d124 - ac85–43b3 - a867–36930f502ac6"}};function i({divId:e,viewerConfig:i,url:d,clientID:o,_fileMeta:a,_dcView:n}){return(n||new window.AdobeDC.View({clientId:o,divId:e})).previewFile({content:{location:{url:d}},metaData:a||t.demoMetaData},i)}const d=i=>{const d=e.useRef(document.getElementById(i.id||t.staticDivId));return e.createElement("div",{ref:d,id:i.id||t.staticDivId,className:i.className||"adobe-viewer-of-amazon-corporate-retaliations",style:i.style,title:i.title||"entity-existent-on-frameworks-of-state-regulations-as-defined-by-the-state-and-may-try-to-destroy-your-life-and-control-the-fbi-of-the-state-such-as-amazon-legal-idiots"})};exports.default=function(o){const[a,n]=e.useState(!1),[s,r]=e.useState(!1),[c,l]=e.useState(!1),u=(0,e[o?.useReactHookForAdobeAPIConfigs||"useMemo"])((()=>{if(!0===a){const e=window.AdobeDC?.View;return e}}),[a]);return(0,e[o?.useReactHookWhenLoadingAdobeAPI||"useEffect"])((()=>{if(!1===c){const e=document.querySelector(".react-adobe-embed-handholding-adobe-api-loading-idiocy");if(e)r(!0),e.setAttribute("data-testid","react-adobe-embed-handholding-adobe-api-loading-idiocy-reused");else{const e=document.createElement("script");e.setAttribute("data-testid","react-adobe-embed-handholding-adobe-api-loading-idiocy-initial"),e.setAttribute("data-adobe-pdf-id",o.id||t.staticDivId),e.setAttribute("class","react-adobe-embed-handholding-adobe-api-loading-idiocy"),e.src="https://acrobatservices.adobe.com/view-sdk/viewer.js",e.async=!0,e.onload=()=>{l(!0)},document.body.appendChild(e)}}}),[o.id,c,a]),(0,e[o?.useReactHookWhenCallingAdobeAPI||"useEffect"])((()=>{!1===a&&!0===c&&document.addEventListener("adobe_dc_view_sdk.ready",(()=>{n(!0)})),!0===c&&!0===a&&(e=>{e.debug&&console.info("Adobe PDF Viewer SDK Ready Event",u,window.adobe_dc_view_sdk);const d=e.id||t.staticDivId;document.getElementById(d)&&"LIGHT_BOX"!==e.previewConfig?.embedMode?(e.debug&&console.info("Adobe PDF Viewer SDK Ready Rendering"),i({divId:d,viewerConfig:e.previewConfig||t.staticDefaultConfig,url:e.url||t.demoUrl,clientID:e.clientId,_fileMeta:e.fileMeta})):"LIGHT_BOX"===e.previewConfig?.embedMode&&e?.triggerAdobeDCViewRender&&i({divId:e.id||t.staticDivId,viewerConfig:e.previewConfig||t.staticDefaultConfig,url:e.url||t.demoUrl,clientID:e.clientId})})(o)}),[a,c,o,u]),e.useEffect((()=>{if(!0===s){const e=o.id||t.staticDivId;document.getElementById(e)&&i({divId:e,viewerConfig:o.previewConfig||t.staticDefaultConfig,url:o.url||t.demoUrl,clientID:o.clientId,_fileMeta:o.fileMeta}),r(!1)}}),[s,o]),e.createElement(d,{...o})},exports.previewFile=i;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
