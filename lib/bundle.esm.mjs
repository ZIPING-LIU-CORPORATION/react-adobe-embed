import e from"react";const t={demoUrl:"https://documentcloud.adobe.com/view-sdk-demo/PDFs/Bodea Brochure.pdf",staticDefaultConfig:{showAnnotationTools:!1,showLeftHandPanel:!1,showPageControls:!1,showDownloadPDF:!1,showPrintPDF:!1},staticDivId:"pdf-div",demoMetaData:{fileName:"Menu.pdf",id:"6d07d124 - ac85–43b3 - a867–36930f502ac6"}};function i({divId:e,viewerConfig:i,url:o,clientID:d,_fileMeta:a,_dcView:n}){return(n||new window.AdobeDC.View({clientId:d,divId:e})).previewFile({content:{location:{url:o}},metaData:a||t.demoMetaData},i)}const o=i=>{const o=e.useRef(document.getElementById(i.id||t.staticDivId));return e.createElement("div",{ref:o,id:i.id||t.staticDivId,className:i.className||"adobe-viewer-of-amazon-corporate-retaliations",style:i.style,title:i.title||"entity-existent-on-frameworks-of-state-regulations-as-defined-by-the-state-and-may-try-to-destroy-your-life-and-control-the-fbi-of-the-state-such-as-amazon-legal-idiots"})};function d(d){const[a,n]=e.useState(!1),[s,c]=e.useState(!1),[r,l]=e.useState(!1),f=(0,e[d?.useReactHookForAdobeAPIConfigs||"useMemo"])((()=>{if(!0===a){const e=window.AdobeDC?.View;return e}}),[a]);(0,e[d?.useReactHookWhenLoadingAdobeAPI||"useEffect"])((()=>{if(!1===r){if(document.querySelector(".react-adobe-embed-handholding-adobe-api-loading-idiocy"))c(!0);else{const e=document.createElement("script");e.setAttribute("data-adobe-pdf-id",d.id||t.staticDivId),e.setAttribute("class","react-adobe-embed-handholding-adobe-api-loading-idiocy"),e.src="https://acrobatservices.adobe.com/view-sdk/viewer.js",e.async=!0,e.onload=()=>{l(!0)},document.body.appendChild(e)}}}),[d.id,r,a]);return(0,e[d?.useReactHookWhenCallingAdobeAPI||"useEffect"])((()=>{!1===a&&!0===r&&document.addEventListener("adobe_dc_view_sdk.ready",(()=>{n(!0)})),!0===r&&!0===a&&(e=>{e.debug&&console.info("Adobe PDF Viewer SDK Ready Event",f,window.adobe_dc_view_sdk);const o=e.id||t.staticDivId;document.getElementById(o)&&"LIGHT_BOX"!==e.previewConfig?.embedMode?(e.debug&&console.info("Adobe PDF Viewer SDK Ready Rendering"),i({divId:o,viewerConfig:e.previewConfig||t.staticDefaultConfig,url:e.url||t.demoUrl,clientID:e.clientId,_fileMeta:e.fileMeta})):"LIGHT_BOX"===e.previewConfig?.embedMode&&e?.triggerAdobeDCViewRender&&i({divId:e.id||t.staticDivId,viewerConfig:e.previewConfig||t.staticDefaultConfig,url:e.url||t.demoUrl,clientID:e.clientId})})(d)}),[a,r,d,f]),e.useEffect((()=>{if(!0===s){const e=d.id||t.staticDivId;document.getElementById(e)&&i({divId:e,viewerConfig:d.previewConfig||t.staticDefaultConfig,url:d.url||t.demoUrl,clientID:d.clientId,_fileMeta:d.fileMeta}),c(!1)}}),[s,d]),e.createElement(o,{...d})}export{d as default,i as previewFile};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
